From 2c245dd78387be2f31166aa33c46e75d716709ab Mon Sep 17 00:00:00 2001
From: Igor Tatarinov <igor.tanv@gmail.com>
Date: Fri, 12 Mar 2021 10:25:12 +0700
Subject: [PATCH] My squashed commits

---
 api/package-lock.json                         | 149 ++++++++
 api/package.json                              |   6 +-
 api/src/db/data/RestaurantData.ts             |  53 +++
 api/src/db/providers/DbProvider.ts            |  27 ++
 .../scripts/create_menu_order_item_table.sql  |   5 +
 .../db/scripts/create_menu_order_table.sql    |   4 +
 api/src/db/scripts/create_menu_table.sql      |   6 +
 api/src/db/scripts/create_restaurant_db.sql   |   1 +
 api/src/db/scripts/insert_menu_rows.sql       |  13 +
 api/src/helpers/identityHelpers.ts            |  17 +
 api/src/server.ts                             |  38 ++-
 api/tsconfig.json                             |  32 +-
 frontend/package-lock.json                    | 320 ++++++++++++++++++
 frontend/package.json                         |   8 +
 frontend/src/App.tsx                          |  26 +-
 frontend/src/features/order/index.tsx         | 150 ++++++++
 frontend/src/features/order/menu/index.tsx    |  21 ++
 .../src/features/order/menu/menu-item.tsx     |  50 +++
 frontend/src/index.css                        |  48 ++-
 menu.json => frontend/src/menu.json           |   0
 frontend/src/modules/api-fetch.ts             |  22 ++
 21 files changed, 953 insertions(+), 43 deletions(-)
 create mode 100644 api/src/db/data/RestaurantData.ts
 create mode 100644 api/src/db/providers/DbProvider.ts
 create mode 100644 api/src/db/scripts/create_menu_order_item_table.sql
 create mode 100644 api/src/db/scripts/create_menu_order_table.sql
 create mode 100644 api/src/db/scripts/create_menu_table.sql
 create mode 100644 api/src/db/scripts/create_restaurant_db.sql
 create mode 100644 api/src/db/scripts/insert_menu_rows.sql
 create mode 100644 api/src/helpers/identityHelpers.ts
 create mode 100644 frontend/src/features/order/index.tsx
 create mode 100644 frontend/src/features/order/menu/index.tsx
 create mode 100644 frontend/src/features/order/menu/menu-item.tsx
 rename menu.json => frontend/src/menu.json (100%)
 create mode 100644 frontend/src/modules/api-fetch.ts

diff --git a/api/package-lock.json b/api/package-lock.json
index 4646f6c..e61a651 100644
--- a/api/package-lock.json
+++ b/api/package-lock.json
@@ -86,6 +86,14 @@
         "@types/range-parser": "*"
       }
     },
+    "@types/knex": {
+      "version": "0.16.1",
+      "resolved": "https://registry.npmjs.org/@types/knex/-/knex-0.16.1.tgz",
+      "integrity": "sha512-54gWD1HWwdVx5iLHaJ1qxH3I6KyBsj5fFqzRpXFn7REWiEB2jwspeVCombNsocSrqPd7IRPqKrsIME7/cD+TFQ==",
+      "requires": {
+        "knex": "*"
+      }
+    },
     "@types/mime": {
       "version": "2.0.3",
       "resolved": "https://registry.npmjs.org/@types/mime/-/mime-2.0.3.tgz",
@@ -278,6 +286,11 @@
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz",
       "integrity": "sha1-ibTRmasr7kneFk6gK4nORi1xt2c="
     },
+    "bignumber.js": {
+      "version": "9.0.0",
+      "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz",
+      "integrity": "sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A=="
+    },
     "binary-extensions": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.1.0.tgz",
@@ -583,6 +596,11 @@
       "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
       "integrity": "sha1-p9BVi9icQveV3UIyj3QIMcpTvCU="
     },
+    "colorette": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/colorette/-/colorette-1.2.1.tgz",
+      "integrity": "sha512-puCDz0CzydiSYOrnXpz/PKd69zRrribezjtE9yd4zvytoRc8+RY/KJPvtPFKZS3E3wP6neGyMe0vOTlHO5L3Pw=="
+    },
     "combined-stream": {
       "version": "1.0.8",
       "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
@@ -591,6 +609,11 @@
         "delayed-stream": "~1.0.0"
       }
     },
+    "commander": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-7.1.0.tgz",
+      "integrity": "sha512-pRxBna3MJe6HKnBGsDyMv8ETbptw3axEdYHoqNh7gu5oDcew8fs0xnivZGm06Ogk8zGAJ9VX+OPEr2GXEQK4dg=="
+    },
     "component-emitter": {
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz",
@@ -827,6 +850,11 @@
         "is-symbol": "^1.0.2"
       }
     },
+    "escalade": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz",
+      "integrity": "sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw=="
+    },
     "escape-goat": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/escape-goat/-/escape-goat-2.1.1.tgz",
@@ -843,6 +871,11 @@
       "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
       "integrity": "sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ="
     },
+    "esm": {
+      "version": "3.2.25",
+      "resolved": "https://registry.npmjs.org/esm/-/esm-3.2.25.tgz",
+      "integrity": "sha512-U1suiZ2oDVWv4zPO56S0NcR5QriEahGtdN2OR6FiOG4WJvcjBVFB0qI4+eKoWFH483PKGuLuu6V8Z4T5g63UVA=="
+    },
     "esprima": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
@@ -994,6 +1027,11 @@
         "pump": "^3.0.0"
       }
     },
+    "getopts": {
+      "version": "2.2.5",
+      "resolved": "https://registry.npmjs.org/getopts/-/getopts-2.2.5.tgz",
+      "integrity": "sha512-9jb7AW5p3in+IiJWhQiZmmwkpLaR/ccTWdWQCtZM66HJcHHLegowh4q4tSD7gouUyeNvFWRavfK9GXosQHDpFA=="
+    },
     "glob": {
       "version": "7.1.6",
       "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
@@ -1147,6 +1185,11 @@
       "integrity": "sha512-RZY5huIKCMRWDUqZlEi72f/lmXKMvuszcMBduliQ3nnWbx9X/ZBQO7DijMEYS9EhHBb2qacRUMtC7svLwe0lcw==",
       "dev": true
     },
+    "interpret": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/interpret/-/interpret-2.2.0.tgz",
+      "integrity": "sha512-Ju0Bz/cEia55xDwUWEa8+olFpCiQoypjnQySseKtmjNrnps3P+xfpUmGr90T7yjlVJmOtybRvPXhKMbHr+fWnw=="
+    },
     "ip-regex": {
       "version": "2.1.0",
       "resolved": "https://registry.npmjs.org/ip-regex/-/ip-regex-2.1.0.tgz",
@@ -1189,6 +1232,14 @@
         "ci-info": "^2.0.0"
       }
     },
+    "is-core-module": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.2.0.tgz",
+      "integrity": "sha512-XRAfAdyyY5F5cOXn7hYQDqh2Xmii+DEfIcQGxK/uNwMHhIkPWO0g8msXcbzLe+MpGoR951MlqM/2iIlU4vKDdQ==",
+      "requires": {
+        "has": "^1.0.3"
+      }
+    },
     "is-date-object": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.2.tgz",
@@ -1350,6 +1401,41 @@
         "json-buffer": "3.0.0"
       }
     },
+    "knex": {
+      "version": "0.95.1",
+      "resolved": "https://registry.npmjs.org/knex/-/knex-0.95.1.tgz",
+      "integrity": "sha512-8vAmH4M6ks0qXHqaIacUOTtGAVc1PPFuF8W/W9bzuUHcQur4809mtufw1LY6n/tNRTLwMFBSXWkUnfFQFqFvNQ==",
+      "requires": {
+        "colorette": "1.2.1",
+        "commander": "^7.1.0",
+        "debug": "4.3.1",
+        "escalade": "^3.1.1",
+        "esm": "^3.2.25",
+        "getopts": "2.2.5",
+        "interpret": "^2.2.0",
+        "lodash": "^4.17.21",
+        "pg-connection-string": "2.4.0",
+        "rechoir": "^0.7.0",
+        "resolve-from": "^5.0.0",
+        "tarn": "^3.0.1",
+        "tildify": "2.0.0"
+      },
+      "dependencies": {
+        "debug": {
+          "version": "4.3.1",
+          "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.1.tgz",
+          "integrity": "sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==",
+          "requires": {
+            "ms": "2.1.2"
+          }
+        },
+        "ms": {
+          "version": "2.1.2",
+          "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
+          "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
+        }
+      }
+    },
     "latest-version": {
       "version": "5.1.0",
       "resolved": "https://registry.npmjs.org/latest-version/-/latest-version-5.1.0.tgz",
@@ -1367,6 +1453,11 @@
         "p-locate": "^4.1.0"
       }
     },
+    "lodash": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
+      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
+    },
     "log-symbols": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/log-symbols/-/log-symbols-3.0.0.tgz",
@@ -1550,6 +1641,17 @@
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
       "integrity": "sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g="
     },
+    "mysql": {
+      "version": "2.18.1",
+      "resolved": "https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz",
+      "integrity": "sha512-Bca+gk2YWmqp2Uf6k5NFEurwY/0td0cpebAucFpY/3jhrwrVGuxU2uQFCHjU19SJfje0yQvi+rVWdq78hR5lig==",
+      "requires": {
+        "bignumber.js": "9.0.0",
+        "readable-stream": "2.3.7",
+        "safe-buffer": "5.1.2",
+        "sqlstring": "2.3.1"
+      }
+    },
     "negotiator": {
       "version": "0.6.2",
       "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.2.tgz",
@@ -1714,6 +1816,11 @@
       "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
       "integrity": "sha1-F0uSaHNVNP+8es5r9TpanhtcX18="
     },
+    "path-parse": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.6.tgz",
+      "integrity": "sha512-GSmOT2EbHrINBf9SR7CDELwlJ8AENk3Qn7OikK4nFYAu3Ote2+JYNVvkpAEQm3/TLNEJFD/xZJjzyxg3KBWOzw=="
+    },
     "path-to-regexp": {
       "version": "0.1.7",
       "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
@@ -1724,6 +1831,11 @@
       "resolved": "https://registry.npmjs.org/pathval/-/pathval-1.1.0.tgz",
       "integrity": "sha1-uULm1L3mUwBe9rcTYd74cn0GReA="
     },
+    "pg-connection-string": {
+      "version": "2.4.0",
+      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.4.0.tgz",
+      "integrity": "sha512-3iBXuv7XKvxeMrIgym7njT+HlZkwZqqGX4Bu9cci8xHZNT+Um1gWKqCsAzcC0d95rcKMU5WBg6YRUcHyV0HZKQ=="
+    },
     "picomatch": {
       "version": "2.2.2",
       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.2.2.tgz",
@@ -1850,6 +1962,14 @@
         "picomatch": "^2.2.1"
       }
     },
+    "rechoir": {
+      "version": "0.7.0",
+      "resolved": "https://registry.npmjs.org/rechoir/-/rechoir-0.7.0.tgz",
+      "integrity": "sha512-ADsDEH2bvbjltXEP+hTIAmeFekTFK0V2BTxMkok6qILyAJEXV0AFfoWcAq4yfll5VdIMd/RVXq0lR+wQi5ZU3Q==",
+      "requires": {
+        "resolve": "^1.9.0"
+      }
+    },
     "registry-auth-token": {
       "version": "4.2.0",
       "resolved": "https://registry.npmjs.org/registry-auth-token/-/registry-auth-token-4.2.0.tgz",
@@ -1878,6 +1998,20 @@
       "resolved": "https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz",
       "integrity": "sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg=="
     },
+    "resolve": {
+      "version": "1.20.0",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.20.0.tgz",
+      "integrity": "sha512-wENBPt4ySzg4ybFQW2TT1zMQucPK95HSh/nq2CFTZVOGut2+pQvSsgtda4d26YrYcr067wjbmzOG8byDPBX63A==",
+      "requires": {
+        "is-core-module": "^2.2.0",
+        "path-parse": "^1.0.6"
+      }
+    },
+    "resolve-from": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-5.0.0.tgz",
+      "integrity": "sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw=="
+    },
     "responselike": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/responselike/-/responselike-1.0.2.tgz",
@@ -2005,6 +2139,11 @@
       "resolved": "https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz",
       "integrity": "sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw="
     },
+    "sqlstring": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.1.tgz",
+      "integrity": "sha1-R1OT/56RR5rqYtyvDKPRSYOn+0A="
+    },
     "statuses": {
       "version": "1.5.0",
       "resolved": "https://registry.npmjs.org/statuses/-/statuses-1.5.0.tgz",
@@ -2102,12 +2241,22 @@
         "has-flag": "^3.0.0"
       }
     },
+    "tarn": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/tarn/-/tarn-3.0.1.tgz",
+      "integrity": "sha512-6usSlV9KyHsspvwu2duKH+FMUhqJnAh6J5J/4MITl8s94iSUQTLkJggdiewKv4RyARQccnigV48Z+khiuVZDJw=="
+    },
     "term-size": {
       "version": "2.2.0",
       "resolved": "https://registry.npmjs.org/term-size/-/term-size-2.2.0.tgz",
       "integrity": "sha512-a6sumDlzyHVJWb8+YofY4TW112G6p2FCPEAFk+59gIYHv3XHRhm9ltVQ9kli4hNWeQBwSpe8cRN25x0ROunMOw==",
       "dev": true
     },
+    "tildify": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/tildify/-/tildify-2.0.0.tgz",
+      "integrity": "sha512-Cc+OraorugtXNfs50hU9KS369rFXCfgGLpfCfvlc+Ud5u6VWmUQsOAa9HbTvheQdYnrdJqqv1e5oIqXppMYnSw=="
+    },
     "to-readable-stream": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/to-readable-stream/-/to-readable-stream-1.0.0.tgz",
diff --git a/api/package.json b/api/package.json
index 69d1937..ae86e46 100644
--- a/api/package.json
+++ b/api/package.json
@@ -11,11 +11,15 @@
   "author": "Jonathan Gill<jonathan@adludio.com>",
   "license": "ISC",
   "dependencies": {
+    "@types/knex": "^0.16.1",
+    "body-parser": "^1.19.0",
     "chai": "^4.2.0",
     "chai-http": "^4.3.0",
     "cors": "^2.8.5",
     "express": "^4.17.1",
-    "mocha": "^8.1.1"
+    "knex": "^0.95.1",
+    "mocha": "^8.1.1",
+    "mysql": "^2.18.1"
   },
   "devDependencies": {
     "@types/cors": "^2.8.7",
diff --git a/api/src/db/data/RestaurantData.ts b/api/src/db/data/RestaurantData.ts
new file mode 100644
index 0000000..999a8eb
--- /dev/null
+++ b/api/src/db/data/RestaurantData.ts
@@ -0,0 +1,53 @@
+import { DbProvider } from '../providers/DbProvider'
+import { IdentityHelpers } from '../../helpers/IdentityHelpers'
+
+const MENU = 'menu'
+const ORDER = 'menu_order'
+const ORDER_ITEM = 'menu_order_item'
+
+enum OrderStatus {
+  Preparing = 1,
+  Ready = 2,
+  Cancelled = 3,
+}
+export class RestaurantData {
+
+  static async getMenu() {
+    const db = await DbProvider.getConnection()
+    return (await db.select().from(MENU))
+  }
+
+  static async getOrder(orderId: string) {
+    const db = await DbProvider.getConnection()
+    return await db(ORDER).where({ id: orderId })
+  }
+
+  static async getOrderItems(orderId: string) {
+    const db = await DbProvider.getConnection()
+    return await db(ORDER_ITEM).where({ order_id: orderId })
+  }
+
+  static async updateOrder(orderId: string) {
+    const db = await DbProvider.getConnection()
+    await db(ORDER).where({ id: orderId }).update({ status: OrderStatus.Ready })
+    return this.getOrder(orderId)
+  }
+
+  static async placeOrder(data: []) {
+    const db = await DbProvider.getConnection()
+    const order: any = {
+      id: IdentityHelpers.generateUUID(),
+      status: OrderStatus.Preparing
+    }
+    const rows = data.map((row: any) => ({
+      order_id: order.id,
+      item_id: row.id,
+      item_count: row.count
+    }))
+
+    await db.insert(order).into(ORDER)
+    await db.batchInsert(ORDER_ITEM, rows)
+
+    return order
+  }
+}
\ No newline at end of file
diff --git a/api/src/db/providers/DbProvider.ts b/api/src/db/providers/DbProvider.ts
new file mode 100644
index 0000000..eb22896
--- /dev/null
+++ b/api/src/db/providers/DbProvider.ts
@@ -0,0 +1,27 @@
+import Knex from 'knex'
+
+export class DbProvider {
+  private static mySqlConnection: any
+
+  static async getConnection() {
+
+    if (!this.mySqlConnection) {
+      const config = {
+        client: 'mysql',
+        connection: {
+          host: process.env.DB_URI,
+          port: 3306,
+          user: 'admin',
+          password: process.env.PASSWORD,
+          database: 'restaurant',
+        }
+      }
+      this.mySqlConnection = Knex(config).on('query-error', function (error: any, obj: any, builder: any) {
+        console.log('Error', error)
+      }).on('query-response', function (resp: any, obj: any, builder: any) {
+        console.log('Success')
+      })
+    }
+    return this.mySqlConnection
+  }
+}
\ No newline at end of file
diff --git a/api/src/db/scripts/create_menu_order_item_table.sql b/api/src/db/scripts/create_menu_order_item_table.sql
new file mode 100644
index 0000000..e1ecffd
--- /dev/null
+++ b/api/src/db/scripts/create_menu_order_item_table.sql
@@ -0,0 +1,5 @@
+CREATE TABLE IF NOT EXISTS restaurant.menu_order_item (
+    item_id INT REFERENCES menu(id),
+    item_count SMALLINT NOT NULL,
+    order_id BINARY(36) REFERENCES menu_order(id)
+) ENGINE=InnoDB;
\ No newline at end of file
diff --git a/api/src/db/scripts/create_menu_order_table.sql b/api/src/db/scripts/create_menu_order_table.sql
new file mode 100644
index 0000000..acb39da
--- /dev/null
+++ b/api/src/db/scripts/create_menu_order_table.sql
@@ -0,0 +1,4 @@
+CREATE TABLE IF NOT EXISTS restaurant.menu_order (
+    id  BINARY(36) NOT NULL PRIMARY KEY,
+    status TINYINT(1) DEFAULT 0 NOT NULL
+) ENGINE=InnoDB;
\ No newline at end of file
diff --git a/api/src/db/scripts/create_menu_table.sql b/api/src/db/scripts/create_menu_table.sql
new file mode 100644
index 0000000..ee8f308
--- /dev/null
+++ b/api/src/db/scripts/create_menu_table.sql
@@ -0,0 +1,6 @@
+CREATE TABLE IF NOT EXISTS restaurant.menu (
+    id INT AUTO_INCREMENT PRIMARY KEY,
+    type VARCHAR(100) NOT NULL,
+    name VARCHAR(100) NOT NULL,
+    price DECIMAL( 4, 2 ) NOT NULL
+) ENGINE=InnoDB;
\ No newline at end of file
diff --git a/api/src/db/scripts/create_restaurant_db.sql b/api/src/db/scripts/create_restaurant_db.sql
new file mode 100644
index 0000000..d74c11e
--- /dev/null
+++ b/api/src/db/scripts/create_restaurant_db.sql
@@ -0,0 +1 @@
+CREATE DATABASE restaurant;
\ No newline at end of file
diff --git a/api/src/db/scripts/insert_menu_rows.sql b/api/src/db/scripts/insert_menu_rows.sql
new file mode 100644
index 0000000..cd2f6e1
--- /dev/null
+++ b/api/src/db/scripts/insert_menu_rows.sql
@@ -0,0 +1,13 @@
+INSERT INTO restaurant.menu(type, name, price)
+VALUES
+	('main', 'Avo on toast', 8.50),
+	('main', 'Pesto pasta with pine nuts and mozzarella', 9.50),
+	('main', 'Roasted pork belly with kimchi and soy sauce glaze', 11.00),
+  ('main', 'Mac and cheese with crunchy seitan ‘bacon’ (V)', 10.00),
+  ('drink', 'Gin and Tonic', 9.50),
+  ('drink', 'White Russian', 9.20),
+  ('drink', 'Mojito', 8.00),
+  ('drink', 'Old Fashioned', 9.00),
+  ('dessert', 'Cheesecake', 7.20),
+  ('dessert', 'Apple Pie', 7.50),
+  ('dessert', 'Chocolate Cookie', 6.80);
diff --git a/api/src/helpers/identityHelpers.ts b/api/src/helpers/identityHelpers.ts
new file mode 100644
index 0000000..6de7ab2
--- /dev/null
+++ b/api/src/helpers/identityHelpers.ts
@@ -0,0 +1,17 @@
+import { performance } from 'perf_hooks'
+
+export class IdentityHelpers {
+  static generateUUID() {
+    let d = new Date().getTime()
+    if (typeof performance !== 'undefined' && typeof performance.now === 'function') {
+      d += performance.now()
+    }
+    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
+      // tslint:disable-next-line:no-bitwise
+      let r = (d + Math.random() * 16) % 16 | 0
+      d = Math.floor(d / 16)
+      // tslint:disable-next-line:no-bitwise
+      return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16)
+    })
+  }
+}
\ No newline at end of file
diff --git a/api/src/server.ts b/api/src/server.ts
index b4b291c..e785554 100644
--- a/api/src/server.ts
+++ b/api/src/server.ts
@@ -1,20 +1,48 @@
 import express from "express";
+import bodyParser from "body-parser";
+import cors from "cors"
+
+import { RestaurantData } from "./db/data/RestaurantData"
 
 const port = process.env.NODE_PORT || 4848;
 
-export function run () {
+
+export async function run() {
   const app = express();
 
-  app.get("/", function(_, res) {
-    res.type('text/plain').send("Food can be served");
+  app.use(cors());
+  app.use(bodyParser.urlencoded({ extended: true }));
+  app.use(bodyParser.json({ limit: "50mb" }));
+  app.use(express.json())
+
+  app.get("/api/menu", async (req, res) => {
+    const menu = await RestaurantData.getMenu()
+    res.status(200).json({ menu })
+  });
+
+  app.get("/api/order/:id", async (req, res) => {
+    const orderId = req.params.id
+    const order = await RestaurantData.getOrder(orderId)
+    res.status(200).json({ order })
+  });
+
+  app.post("/api/order", async (req, res) => {
+    const { selectedItems } = req.body
+    const order = await RestaurantData.placeOrder(selectedItems)
+    // chef
+    setTimeout(async () => {
+      await RestaurantData.updateOrder(order.id)
+    }, 5000);
+
+    res.status(200).json({ order })
   });
 
-  return app.listen(port, function () {
+  return app.listen(port, async () => {
     // Port is forwarded by docker to 80.
     console.log(`Listening on http://localhost:${port}`);
   })
 }
 
-if(process.env.NODE_ENV !== 'testing') {
+if (process.env.NODE_ENV !== 'testing') {
   run();
 }
diff --git a/api/tsconfig.json b/api/tsconfig.json
index ca86aa0..fe9e385 100644
--- a/api/tsconfig.json
+++ b/api/tsconfig.json
@@ -1,39 +1,31 @@
 {
-  "include": [
-    "src",
-    "config"
-  ],
-  "exclude": [
-    "coverage"
-  ],
+  "include": ["src", "config"],
+  "exclude": ["coverage"],
   "compilerOptions": {
     /* Basic Options */
-    "target": "ES2015", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */
+    "target": "ES2015" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
     "lib": [
       "es2015"
-    ], /* Specify library files to be included in the compilation. */
-    "typeRoots": [
-      "./types",
-      "./node_modules/@types"
-    ],
+    ] /* Specify library files to be included in the compilation. */,
+    "typeRoots": ["./types", "./node_modules/@types"],
     "allowSyntheticDefaultImports": true,
-    "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
-    "declaration": false, /* Generates corresponding '.d.ts' file. */
-    "outDir": "./dist", /* Redirect output structure to the directory. */
+    "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
+    "declaration": false /* Generates corresponding '.d.ts' file. */,
+    "outDir": "./dist" /* Redirect output structure to the directory. */,
     /* Strict Type-Checking Options */
     /* Additional Checks */
     "strict": true,
     "skipLibCheck": true,
     "preserveSymlinks": true,
     "resolveJsonModule": true,
-    "noFallthroughCasesInSwitch": true, /* Report errors for fallthrough cases in switch statement. */
+    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
     "strictNullChecks": true,
     "noImplicitAny": true,
     "rootDirs": ["src"],
     /* Module Resolution Options */
-    "moduleResolution": "node", /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
-    "esModuleInterop": true,
+    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
+    "esModuleInterop": true
     // "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
-    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */ 
+    // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
   }
 }
diff --git a/frontend/package-lock.json b/frontend/package-lock.json
index 09ee73b..c985bbb 100644
--- a/frontend/package-lock.json
+++ b/frontend/package-lock.json
@@ -1393,6 +1393,25 @@
       "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz",
       "integrity": "sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw=="
     },
+    "@popperjs/core": {
+      "version": "2.9.0",
+      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.9.0.tgz",
+      "integrity": "sha512-wjtKehFAIARq2OxK8j3JrggNlEslJfNuSm2ArteIbKyRMts2g0a7KzTxfRVNUM+O0gnBJ2hNV8nWPOYBgI1sew=="
+    },
+    "@restart/context": {
+      "version": "2.1.4",
+      "resolved": "https://registry.npmjs.org/@restart/context/-/context-2.1.4.tgz",
+      "integrity": "sha512-INJYZQJP7g+IoDUh/475NlGiTeMfwTXUEr3tmRneckHIxNolGOW9CTq83S8cxq0CgJwwcMzMJFchxvlwe7Rk8Q=="
+    },
+    "@restart/hooks": {
+      "version": "0.3.26",
+      "resolved": "https://registry.npmjs.org/@restart/hooks/-/hooks-0.3.26.tgz",
+      "integrity": "sha512-7Hwk2ZMYm+JLWcb7R9qIXk1OoUg1Z+saKWqZXlrvFwT3w6UArVNWgxYOzf+PJoK9zZejp8okPAKTctthhXLt5g==",
+      "requires": {
+        "lodash": "^4.17.20",
+        "lodash-es": "^4.17.20"
+      }
+    },
     "@sheerun/mutationobserver-shim": {
       "version": "0.3.3",
       "resolved": "https://registry.npmjs.org/@sheerun/mutationobserver-shim/-/mutationobserver-shim-0.3.3.tgz",
@@ -1670,6 +1689,11 @@
         "@babel/types": "^7.3.0"
       }
     },
+    "@types/classnames": {
+      "version": "2.2.11",
+      "resolved": "https://registry.npmjs.org/@types/classnames/-/classnames-2.2.11.tgz",
+      "integrity": "sha512-2koNhpWm3DgWRp5tpkiJ8JGc1xTn2q0l+jUNUE7oMKXUf5NpI9AIdC4kbjGNFBdHtcxBD18LAksoudAVhFKCjw=="
+    },
     "@types/color-name": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/@types/color-name/-/color-name-1.1.1.tgz",
@@ -1689,6 +1713,23 @@
         "@types/node": "*"
       }
     },
+    "@types/history": {
+      "version": "4.7.8",
+      "resolved": "https://registry.npmjs.org/@types/history/-/history-4.7.8.tgz",
+      "integrity": "sha512-S78QIYirQcUoo6UJZx9CSP0O2ix9IaeAXwQi26Rhr/+mg7qqPy8TzaxHSUut7eGjL8WmLccT7/MXf304WjqHcA==",
+      "dev": true
+    },
+    "@types/invariant": {
+      "version": "2.2.34",
+      "resolved": "https://registry.npmjs.org/@types/invariant/-/invariant-2.2.34.tgz",
+      "integrity": "sha512-lYUtmJ9BqUN688fGY1U1HZoWT1/Jrmgigx2loq4ZcJpICECm/Om3V314BxdzypO0u5PORKGMM6x0OXaljV1YFg=="
+    },
+    "@types/isomorphic-fetch": {
+      "version": "0.0.35",
+      "resolved": "https://registry.npmjs.org/@types/isomorphic-fetch/-/isomorphic-fetch-0.0.35.tgz",
+      "integrity": "sha512-DaZNUvLDCAnCTjgwxgiL1eQdxIKEpNLOlTNtAgnZc50bG2copGhRrFN9/PxPBuJe+tZVLCbQ7ls0xveXVRPkvw==",
+      "dev": true
+    },
     "@types/istanbul-lib-coverage": {
       "version": "2.0.3",
       "resolved": "https://registry.npmjs.org/@types/istanbul-lib-coverage/-/istanbul-lib-coverage-2.0.3.tgz",
@@ -1766,6 +1807,35 @@
         "@types/react": "*"
       }
     },
+    "@types/react-router": {
+      "version": "5.1.12",
+      "resolved": "https://registry.npmjs.org/@types/react-router/-/react-router-5.1.12.tgz",
+      "integrity": "sha512-0bhXQwHYfMeJlCh7mGhc0VJTRm0Gk+Z8T00aiP4702mDUuLs9SMhnd2DitpjWFjdOecx2UXtICK14H9iMnziGA==",
+      "dev": true,
+      "requires": {
+        "@types/history": "*",
+        "@types/react": "*"
+      }
+    },
+    "@types/react-router-dom": {
+      "version": "5.1.7",
+      "resolved": "https://registry.npmjs.org/@types/react-router-dom/-/react-router-dom-5.1.7.tgz",
+      "integrity": "sha512-D5mHD6TbdV/DNHYsnwBTv+y73ei+mMjrkGrla86HthE4/PVvL1J94Bu3qABU+COXzpL23T1EZapVVpwHuBXiUg==",
+      "dev": true,
+      "requires": {
+        "@types/history": "*",
+        "@types/react": "*",
+        "@types/react-router": "*"
+      }
+    },
+    "@types/react-transition-group": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/@types/react-transition-group/-/react-transition-group-4.4.1.tgz",
+      "integrity": "sha512-vIo69qKKcYoJ8wKCJjwSgCTM+z3chw3g18dkrDfVX665tMH7tmbDxEAnPdey4gTlwZz5QuHGzd+hul0OVZDqqQ==",
+      "requires": {
+        "@types/react": "*"
+      }
+    },
     "@types/stack-utils": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/@types/stack-utils/-/stack-utils-1.0.1.tgz",
@@ -1870,6 +1940,11 @@
         }
       }
     },
+    "@types/warning": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/@types/warning/-/warning-3.0.0.tgz",
+      "integrity": "sha1-DSUBJorY+ZYrdA04fEZU9fjiPlI="
+    },
     "@types/yargs": {
       "version": "13.0.10",
       "resolved": "https://registry.npmjs.org/@types/yargs/-/yargs-13.0.10.tgz",
@@ -3507,6 +3582,11 @@
         }
       }
     },
+    "classnames": {
+      "version": "2.2.6",
+      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.2.6.tgz",
+      "integrity": "sha512-JR/iSQOSt+LQIWwrwEzJ9uk0xfN3mTVYMwt1Ir5mUcSN6pU+V4zQFFaJsclJbPuAUQH+yfWef6tm7l1quW3C8Q=="
+    },
     "clean-css": {
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/clean-css/-/clean-css-4.2.3.tgz",
@@ -4516,6 +4596,15 @@
         "utila": "~0.4"
       }
     },
+    "dom-helpers": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/dom-helpers/-/dom-helpers-5.2.0.tgz",
+      "integrity": "sha512-Ru5o9+V8CpunKnz5LGgWXkmrH/20cGKwcHwS4m73zIvs54CN9epEmT/HLqFJW3kXpakAFkEdzgy1hzlJe3E4OQ==",
+      "requires": {
+        "@babel/runtime": "^7.8.7",
+        "csstype": "^3.0.2"
+      }
+    },
     "dom-serializer": {
       "version": "0.2.2",
       "resolved": "https://registry.npmjs.org/dom-serializer/-/dom-serializer-0.2.2.tgz",
@@ -4809,6 +4898,11 @@
         "es6-symbol": "^3.1.1"
       }
     },
+    "es6-promises": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/es6-promises/-/es6-promises-1.0.10.tgz",
+      "integrity": "sha1-abmJuYyFmDvjpZSIzIoNZ5F1HlU="
+    },
     "es6-symbol": {
       "version": "3.1.3",
       "resolved": "https://registry.npmjs.org/es6-symbol/-/es6-symbol-3.1.3.tgz",
@@ -6291,6 +6385,19 @@
       "resolved": "https://registry.npmjs.org/hex-color-regex/-/hex-color-regex-1.1.0.tgz",
       "integrity": "sha512-l9sfDFsuqtOqKDsQdqrMRk0U85RZc0RtOR9yPI7mRVOa4FsR/BVnZ0shmQRM96Ji99kYZP/7hn1cedc1+ApsTQ=="
     },
+    "history": {
+      "version": "4.10.1",
+      "resolved": "https://registry.npmjs.org/history/-/history-4.10.1.tgz",
+      "integrity": "sha512-36nwAD620w12kuzPAsyINPWJqlNbij+hpK1k9XRloDtym8mxzGYl2c17LnV6IAGB2Dmg4tEa7G7DlawS0+qjew==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "loose-envify": "^1.2.0",
+        "resolve-pathname": "^3.0.0",
+        "tiny-invariant": "^1.0.2",
+        "tiny-warning": "^1.0.0",
+        "value-equal": "^1.0.1"
+      }
+    },
     "hmac-drbg": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/hmac-drbg/-/hmac-drbg-1.0.1.tgz",
@@ -6301,6 +6408,14 @@
         "minimalistic-crypto-utils": "^1.0.1"
       }
     },
+    "hoist-non-react-statics": {
+      "version": "3.3.2",
+      "resolved": "https://registry.npmjs.org/hoist-non-react-statics/-/hoist-non-react-statics-3.3.2.tgz",
+      "integrity": "sha512-/gGivxi8JPKWNm/W0jSmzcMPpfpPLc3dY/6GxhX2hQ9iGj3aDfklV4ET7NjKpSinLpJ5vafa9iiGIEZg10SfBw==",
+      "requires": {
+        "react-is": "^16.7.0"
+      }
+    },
     "hosted-git-info": {
       "version": "2.8.8",
       "resolved": "https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.8.tgz",
@@ -6998,6 +7113,22 @@
       "resolved": "https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz",
       "integrity": "sha1-TkMekrEalzFjaqH5yNHMvP2reN8="
     },
+    "isomorphic-fetch": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/isomorphic-fetch/-/isomorphic-fetch-3.0.0.tgz",
+      "integrity": "sha512-qvUtwJ3j6qwsF3jLxkZ72qCgjMysPzDfeV240JHiGZsANBYd+EEuu35v7dfrJ9Up0Ak07D7GGSkGhCHTqg/5wA==",
+      "requires": {
+        "node-fetch": "^2.6.1",
+        "whatwg-fetch": "^3.4.1"
+      },
+      "dependencies": {
+        "whatwg-fetch": {
+          "version": "3.6.2",
+          "resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.6.2.tgz",
+          "integrity": "sha512-bJlen0FcuU/0EMLrdbJ7zOnW6ITZLrZMIarMUVmdKtsGvZna8vxKYaexICWPfZ8qwf9fzNq+UEIZrnSaApt6RA=="
+        }
+      }
+    },
     "isstream": {
       "version": "0.1.2",
       "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
@@ -7891,6 +8022,11 @@
       "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.20.tgz",
       "integrity": "sha512-PlhdFcillOINfeV7Ni6oF1TAEayyZBoZ8bcshTHqOYJYlrqzRK5hagpagky5o4HfCzzd1TRkXPMFq6cKk9rGmA=="
     },
+    "lodash-es": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
+      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw=="
+    },
     "lodash._reinterpolate": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/lodash._reinterpolate/-/lodash._reinterpolate-3.0.0.tgz",
@@ -8170,6 +8306,25 @@
       "resolved": "https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz",
       "integrity": "sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg=="
     },
+    "mini-create-react-context": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/mini-create-react-context/-/mini-create-react-context-0.4.1.tgz",
+      "integrity": "sha512-YWCYEmd5CQeHGSAKrYvXgmzzkrvssZcuuQDDeqkT+PziKGMgE+0MCCtcKbROzocGBG1meBLl2FotlRwf4gAzbQ==",
+      "requires": {
+        "@babel/runtime": "^7.12.1",
+        "tiny-warning": "^1.0.3"
+      },
+      "dependencies": {
+        "@babel/runtime": {
+          "version": "7.13.9",
+          "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.13.9.tgz",
+          "integrity": "sha512-aY2kU+xgJ3dJ1eU6FMB9EH8dIe8dmusF1xEku52joLvw6eAFN0AI+WxCLDnpev2LEejWBAy2sBvBOBAjI3zmvA==",
+          "requires": {
+            "regenerator-runtime": "^0.13.4"
+          }
+        }
+      }
+    },
     "mini-css-extract-plugin": {
       "version": "0.9.0",
       "resolved": "https://registry.npmjs.org/mini-css-extract-plugin/-/mini-css-extract-plugin-0.9.0.tgz",
@@ -8410,6 +8565,11 @@
         "tslib": "^1.10.0"
       }
     },
+    "node-fetch": {
+      "version": "2.6.1",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.6.1.tgz",
+      "integrity": "sha512-V4aYg89jEoVRxRb2fJdAg8FHvI7cEyYdVAh94HH0UIK8oJxUfkjlDQN9RbMx+bEjP7+ggMiFRprSti032Oipxw=="
+    },
     "node-forge": {
       "version": "0.9.0",
       "resolved": "https://registry.npmjs.org/node-forge/-/node-forge-0.9.0.tgz",
@@ -10136,6 +10296,15 @@
         "react-is": "^16.8.1"
       }
     },
+    "prop-types-extra": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/prop-types-extra/-/prop-types-extra-1.1.1.tgz",
+      "integrity": "sha512-59+AHNnHYCdiC+vMwY52WmvP5dM3QLeoumYuEyceQDi9aEhtwN9zIQ2ZNo25sMyXnbh32h+P1ezDsUpUH3JAew==",
+      "requires": {
+        "react-is": "^16.3.2",
+        "warning": "^4.0.0"
+      }
+    },
     "proxy-addr": {
       "version": "2.0.6",
       "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.6.tgz",
@@ -10315,6 +10484,31 @@
         "whatwg-fetch": "^3.0.0"
       }
     },
+    "react-bootstrap": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/react-bootstrap/-/react-bootstrap-1.5.1.tgz",
+      "integrity": "sha512-jbJNGx9n4JvKgxlvT8DLKSeF3VcqnPJXS9LFdzoZusiZCCGoYecZ9qSCBH5n2A+kjmuura9JkvxI9l7HD+bIdQ==",
+      "requires": {
+        "@babel/runtime": "^7.4.2",
+        "@restart/context": "^2.1.4",
+        "@restart/hooks": "^0.3.21",
+        "@types/classnames": "^2.2.10",
+        "@types/invariant": "^2.2.33",
+        "@types/prop-types": "^15.7.3",
+        "@types/react": ">=16.9.35",
+        "@types/react-transition-group": "^4.4.0",
+        "@types/warning": "^3.0.0",
+        "classnames": "^2.2.6",
+        "dom-helpers": "^5.1.2",
+        "invariant": "^2.2.4",
+        "prop-types": "^15.7.2",
+        "prop-types-extra": "^1.1.0",
+        "react-overlays": "^5.0.0",
+        "react-transition-group": "^4.4.1",
+        "uncontrollable": "^7.0.0",
+        "warning": "^4.0.3"
+      }
+    },
     "react-dev-utils": {
       "version": "10.2.1",
       "resolved": "https://registry.npmjs.org/react-dev-utils/-/react-dev-utils-10.2.1.tgz",
@@ -10532,6 +10726,82 @@
       "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
       "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
     },
+    "react-lifecycles-compat": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/react-lifecycles-compat/-/react-lifecycles-compat-3.0.4.tgz",
+      "integrity": "sha512-fBASbA6LnOU9dOU2eW7aQ8xmYBSXUIWr+UmF9b1efZBazGNO+rcXT/icdKnYm2pTwcRylVUYwW7H1PHfLekVzA=="
+    },
+    "react-overlays": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/react-overlays/-/react-overlays-5.0.0.tgz",
+      "integrity": "sha512-TKbqfAv23TFtCJ2lzISdx76p97G/DP8Rp4TOFdqM9n8GTruVYgE3jX7Zgb8+w7YJ18slTVcDTQ1/tFzdCqjVhA==",
+      "requires": {
+        "@babel/runtime": "^7.12.1",
+        "@popperjs/core": "^2.5.3",
+        "@restart/hooks": "^0.3.25",
+        "@types/warning": "^3.0.0",
+        "dom-helpers": "^5.2.0",
+        "prop-types": "^15.7.2",
+        "uncontrollable": "^7.0.0",
+        "warning": "^4.0.3"
+      },
+      "dependencies": {
+        "@babel/runtime": {
+          "version": "7.13.9",
+          "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.13.9.tgz",
+          "integrity": "sha512-aY2kU+xgJ3dJ1eU6FMB9EH8dIe8dmusF1xEku52joLvw6eAFN0AI+WxCLDnpev2LEejWBAy2sBvBOBAjI3zmvA==",
+          "requires": {
+            "regenerator-runtime": "^0.13.4"
+          }
+        }
+      }
+    },
+    "react-router": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/react-router/-/react-router-5.2.0.tgz",
+      "integrity": "sha512-smz1DUuFHRKdcJC0jobGo8cVbhO3x50tCL4icacOlcwDOEQPq4TMqwx3sY1TP+DvtTgz4nm3thuo7A+BK2U0Dw==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "history": "^4.9.0",
+        "hoist-non-react-statics": "^3.1.0",
+        "loose-envify": "^1.3.1",
+        "mini-create-react-context": "^0.4.0",
+        "path-to-regexp": "^1.7.0",
+        "prop-types": "^15.6.2",
+        "react-is": "^16.6.0",
+        "tiny-invariant": "^1.0.2",
+        "tiny-warning": "^1.0.0"
+      },
+      "dependencies": {
+        "isarray": {
+          "version": "0.0.1",
+          "resolved": "https://registry.npmjs.org/isarray/-/isarray-0.0.1.tgz",
+          "integrity": "sha1-ihis/Kmo9Bd+Cav8YDiTmwXR7t8="
+        },
+        "path-to-regexp": {
+          "version": "1.8.0",
+          "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-1.8.0.tgz",
+          "integrity": "sha512-n43JRhlUKUAlibEJhPeir1ncUID16QnEjNpwzNdO3Lm4ywrBpBZ5oLD0I6br9evr1Y9JTqwRtAh7JLoOzAQdVA==",
+          "requires": {
+            "isarray": "0.0.1"
+          }
+        }
+      }
+    },
+    "react-router-dom": {
+      "version": "5.2.0",
+      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-5.2.0.tgz",
+      "integrity": "sha512-gxAmfylo2QUjcwxI63RhQ5G85Qqt4voZpUXSEqCwykV0baaOTQDR1f0PmY8AELqIyVc0NEZUj0Gov5lNGcXgsA==",
+      "requires": {
+        "@babel/runtime": "^7.1.2",
+        "history": "^4.9.0",
+        "loose-envify": "^1.3.1",
+        "prop-types": "^15.6.2",
+        "react-router": "5.2.0",
+        "tiny-invariant": "^1.0.2",
+        "tiny-warning": "^1.0.0"
+      }
+    },
     "react-scripts": {
       "version": "3.4.3",
       "resolved": "https://registry.npmjs.org/react-scripts/-/react-scripts-3.4.3.tgz",
@@ -10592,6 +10862,17 @@
         "workbox-webpack-plugin": "4.3.1"
       }
     },
+    "react-transition-group": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/react-transition-group/-/react-transition-group-4.4.1.tgz",
+      "integrity": "sha512-Djqr7OQ2aPUiYurhPalTrVy9ddmFCCzwhqQmtN+J3+3DzLO209Fdr70QrN8Z3DsglWql6iY1lDWAfpFiBtuKGw==",
+      "requires": {
+        "@babel/runtime": "^7.5.5",
+        "dom-helpers": "^5.0.1",
+        "loose-envify": "^1.4.0",
+        "prop-types": "^15.6.2"
+      }
+    },
     "read-pkg": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/read-pkg/-/read-pkg-3.0.0.tgz",
@@ -10894,6 +11175,11 @@
       "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-3.0.0.tgz",
       "integrity": "sha1-six699nWiBvItuZTM17rywoYh0g="
     },
+    "resolve-pathname": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-pathname/-/resolve-pathname-3.0.0.tgz",
+      "integrity": "sha512-C7rARubxI8bXFNB/hqcp/4iUeIXJhJZvFPFPiSPRnhU5UPxzMFIl+2E6yY6c4k9giDJAhtV+enfA+G89N6Csng=="
+    },
     "resolve-url": {
       "version": "0.2.1",
       "resolved": "https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz",
@@ -12332,6 +12618,16 @@
       "resolved": "https://registry.npmjs.org/timsort/-/timsort-0.3.0.tgz",
       "integrity": "sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q="
     },
+    "tiny-invariant": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/tiny-invariant/-/tiny-invariant-1.1.0.tgz",
+      "integrity": "sha512-ytxQvrb1cPc9WBEI/HSeYYoGD0kWnGEOR8RY6KomWLBVhqz0RgTwVO9dLrGz7dC+nN9llyI7OKAgRq8Vq4ZBSw=="
+    },
+    "tiny-warning": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/tiny-warning/-/tiny-warning-1.0.3.tgz",
+      "integrity": "sha512-lBN9zLN/oAf68o3zNXYrdCt1kP8WsiGW8Oo2ka41b2IM5JL/S1CTyX1rW0mb/zSuJun0ZUrDxx4sqvYS2FWzPA=="
+    },
     "tmp": {
       "version": "0.0.33",
       "resolved": "https://registry.npmjs.org/tmp/-/tmp-0.0.33.tgz",
@@ -12478,6 +12774,17 @@
       "resolved": "https://registry.npmjs.org/typescript/-/typescript-3.7.5.tgz",
       "integrity": "sha512-/P5lkRXkWHNAbcJIiHPfRoKqyd7bsyCma1hZNUGfn20qm64T6ZBlrzprymeu918H+mB/0rIg2gGK/BXkhhYgBw=="
     },
+    "uncontrollable": {
+      "version": "7.2.1",
+      "resolved": "https://registry.npmjs.org/uncontrollable/-/uncontrollable-7.2.1.tgz",
+      "integrity": "sha512-svtcfoTADIB0nT9nltgjujTi7BzVmwjZClOmskKu/E8FW9BXzg9os8OLr4f8Dlnk0rYWJIWr4wv9eKUXiQvQwQ==",
+      "requires": {
+        "@babel/runtime": "^7.6.3",
+        "@types/react": ">=16.9.11",
+        "invariant": "^2.2.4",
+        "react-lifecycles-compat": "^3.0.4"
+      }
+    },
     "unicode-canonical-property-names-ecmascript": {
       "version": "1.0.4",
       "resolved": "https://registry.npmjs.org/unicode-canonical-property-names-ecmascript/-/unicode-canonical-property-names-ecmascript-1.0.4.tgz",
@@ -12708,6 +13015,11 @@
         "spdx-expression-parse": "^3.0.0"
       }
     },
+    "value-equal": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/value-equal/-/value-equal-1.0.1.tgz",
+      "integrity": "sha512-NOJ6JZCAWr0zlxZt+xqCHNTEKOsrks2HQd4MqhP1qy4z1SkbEP467eNx6TgDKXMvUOb+OENfJCZwM+16n7fRfw=="
+    },
     "vary": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
@@ -12764,6 +13076,14 @@
         "makeerror": "1.0.x"
       }
     },
+    "warning": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/warning/-/warning-4.0.3.tgz",
+      "integrity": "sha512-rpJyN222KWIvHJ/F53XSZv0Zl/accqHR8et1kpaMTD/fLCRxtV8iX8czMzY7sVZupTI3zcUTg8eycS2kNF9l6w==",
+      "requires": {
+        "loose-envify": "^1.0.0"
+      }
+    },
     "watchpack": {
       "version": "1.7.4",
       "resolved": "https://registry.npmjs.org/watchpack/-/watchpack-1.7.4.tgz",
diff --git a/frontend/package.json b/frontend/package.json
index 7e2e359..aead676 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -10,8 +10,12 @@
     "@types/node": "^12.0.0",
     "@types/react": "^16.9.0",
     "@types/react-dom": "^16.9.0",
+    "es6-promises": "^1.0.10",
+    "isomorphic-fetch": "^3.0.0",
     "react": "^16.13.1",
+    "react-bootstrap": "^1.5.1",
     "react-dom": "^16.13.1",
+    "react-router-dom": "^5.2.0",
     "react-scripts": "3.4.3",
     "typescript": "~3.7.2"
   },
@@ -35,5 +39,9 @@
       "last 1 firefox version",
       "last 1 safari version"
     ]
+  },
+  "devDependencies": {
+    "@types/isomorphic-fetch": "0.0.35",
+    "@types/react-router-dom": "^5.1.7"
   }
 }
diff --git a/frontend/src/App.tsx b/frontend/src/App.tsx
index a7050bf..e334d86 100644
--- a/frontend/src/App.tsx
+++ b/frontend/src/App.tsx
@@ -1,18 +1,16 @@
-import React from 'react';
-import logo from './logo.png';
-import './App.css';
+import React from "react";
+import { BrowserRouter, Switch, Route } from "react-router-dom";
 
-function App() {
+import Order from "./features/order";
+
+export default function App() {
   return (
-    <div className="App">
-      <header className="App-header">
-        <img src={logo} className="App-logo" alt="logo" />
-        <p>
-          Welcome! And good luck! :)<br/>Edit <code>src/App.tsx</code> and save to reload.
-        </p>
-      </header>
-    </div>
+    <BrowserRouter>
+      <Switch>
+        <Route exact path="/">
+          <Order />
+        </Route>
+      </Switch>
+    </BrowserRouter>
   );
 }
-
-export default App;
diff --git a/frontend/src/features/order/index.tsx b/frontend/src/features/order/index.tsx
new file mode 100644
index 0000000..657f964
--- /dev/null
+++ b/frontend/src/features/order/index.tsx
@@ -0,0 +1,150 @@
+import React, { useEffect, useState } from "react";
+
+import Menu from "./menu";
+
+import { apiFetch } from "../../modules/api-fetch";
+
+export interface MenuProps {
+  props: Array<{}>;
+  onChange: Function;
+}
+
+interface TotalStoreMenuItem {
+  id: number;
+  price: number;
+  count: number;
+  type: string;
+}
+
+const TotalStore = {
+  total: 0,
+  reset_timer: setTimeout(() => {}, 0),
+  compute() {
+    let newTotal = 0;
+    let types = new Map<string, boolean>();
+    TotalStore.items.forEach((value: TotalStoreMenuItem) => {
+      newTotal += value.price * value.count;
+      types.set(value.type, true);
+    });
+
+    if (TotalStore.total !== newTotal) {
+      clearTimeout(TotalStore.reset_timer);
+      TotalStore.reset_timer = setTimeout(() => {
+        TotalStore.total = newTotal;
+        TotalStore.onChange(newTotal);
+      }, 50);
+    }
+  },
+  update(id: number, price: number, count: number, type: string) {
+    TotalStore.items.set(id, {
+      id,
+      price,
+      count,
+      type,
+    });
+    TotalStore.compute();
+  },
+  reset() {
+    TotalStore.items.clear();
+    localStorage.clear();
+    TotalStore.total = 0;
+  },
+  onChange(t: number) {},
+  items: new Map<number, TotalStoreMenuItem>(),
+};
+
+export default function Order() {
+  const [menu, setMenu] = useState<Array<{}>>([]);
+  const [total, setTotal] = useState(0);
+
+  useEffect(() => {
+    apiFetch("menu").then((json) => setMenu(json.menu));
+  }, []);
+
+  TotalStore.onChange = (t: number) => {
+    setTotal(t);
+  };
+
+  const itemChanged = (
+    id: number,
+    price: number,
+    count: number,
+    type: string
+  ) => {
+    TotalStore.update(id, price, count, type);
+  };
+
+  function getSelectedItems(TotalStore: any) {
+    let selectedItems: Array<{
+      id: number;
+      count: number;
+    }> = [];
+    TotalStore.items.forEach((item: any) => {
+      if (item.count !== 0) {
+        selectedItems.push({
+          id: item.id,
+          count: item.count,
+        });
+      }
+    });
+    return selectedItems;
+  }
+
+  async function handleSubmit(e: any) {
+    e.preventDefault();
+    const selectedItems = getSelectedItems(TotalStore);
+    apiFetch("order", "post", { selectedItems })
+      .then((json) => {
+        alert("Order has been submitted");
+        setTotal(0);
+        TotalStore.reset();
+        localStorage.setItem("last_order_id", json.order.id);
+
+        function checkOrderStatus() {
+          apiFetch(
+            `order/${json.order.id || localStorage.getItem("last_order_id")}`
+          ).then((placedOrder) => {
+            const { order } = placedOrder;
+            if (order[0].status === 2) {
+              alert("Your order is ready!");
+            } else {
+              setTimeout(checkOrderStatus, 5000);
+            }
+          });
+        }
+        checkOrderStatus();
+      })
+      .catch((error) => {
+        alert("Server error");
+      });
+  }
+
+  function orderPlaced(total: number) {
+    return total !== 0 ? true : false;
+  }
+
+  return (
+    <div>
+      {menu.length > 0 ? (
+        <>
+          <div className="menu">
+            <div className="menu-title">Food Menu</div>
+            <form id="menu-form" onSubmit={handleSubmit} autoComplete="off">
+              <Menu onChange={itemChanged} props={menu} />
+              <button type="submit" disabled={!orderPlaced(total)}>
+                Place Order
+              </button>
+            </form>
+          </div>
+          <div className="order-total">
+            <h2>
+              Total: $<span>{total.toFixed(2)}</span>
+            </h2>
+          </div>
+        </>
+      ) : (
+        <>Loading Menu</>
+      )}
+    </div>
+  );
+}
diff --git a/frontend/src/features/order/menu/index.tsx b/frontend/src/features/order/menu/index.tsx
new file mode 100644
index 0000000..4502520
--- /dev/null
+++ b/frontend/src/features/order/menu/index.tsx
@@ -0,0 +1,21 @@
+import React, { useState } from "react";
+
+import { MenuProps } from "../index";
+import MenuItem from "./menu-item";
+
+export default function Menu({ onChange, props }: MenuProps) {
+  return (
+    <div>
+      {props.map((food: any, index: number) => {
+        return (
+          <MenuItem
+            key={index}
+            onChange={onChange}
+            type={food.type}
+            item={food}
+          />
+        );
+      })}
+    </div>
+  );
+}
diff --git a/frontend/src/features/order/menu/menu-item.tsx b/frontend/src/features/order/menu/menu-item.tsx
new file mode 100644
index 0000000..86f003c
--- /dev/null
+++ b/frontend/src/features/order/menu/menu-item.tsx
@@ -0,0 +1,50 @@
+import React, { useState } from "react";
+
+interface MenuItemProps {
+  item: {
+    price: Number;
+    name: String;
+    id: Number;
+  };
+  onChange: Function;
+  type: String;
+}
+
+const FoodItemLocalStore = {
+  setCount(id: Number, count: Number) {
+    localStorage.setItem(`menu_item_id_${id}`, String(count));
+  },
+  getCount(id: Number) {
+    return parseInt(localStorage.getItem(`menu_item_id_${id}`) || "0");
+  },
+};
+
+export default function MenuItem({ onChange, item, type }: MenuItemProps) {
+  const [data, setData] = useState({
+    count: FoodItemLocalStore.getCount(item.id),
+  });
+
+  const menuItemCountChange = (e: any) => {
+    data.count = parseInt(e.target.value);
+    FoodItemLocalStore.setCount(item.id, data.count);
+    setData({ ...data });
+  };
+
+  onChange(item.id, item.price, data.count, type);
+
+  return (
+    <div>
+      <article className="menu-item" data-item-type={type}>
+        <h3 className="item-name">{item.name}</h3>
+        <input
+          type="number"
+          className="menu-item-count"
+          min="0"
+          value={data.count}
+          onChange={menuItemCountChange}
+        />
+        <strong className="item-price">${item.price.toFixed(2)}</strong>
+      </article>
+    </div>
+  );
+}
diff --git a/frontend/src/index.css b/frontend/src/index.css
index ec2585e..7294a6b 100644
--- a/frontend/src/index.css
+++ b/frontend/src/index.css
@@ -1,13 +1,55 @@
 body {
   margin: 0;
-  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
-    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
+  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
+    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
     sans-serif;
   -webkit-font-smoothing: antialiased;
   -moz-osx-font-smoothing: grayscale;
 }
 
 code {
-  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
+  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",
     monospace;
 }
+
+.menu {
+  padding: 2rem 2.25rem 1rem;
+  margin: 0 auto;
+  max-width: 50rem;
+  background-color: var(--light);
+  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.1);
+}
+
+.menu-item {
+  display: flex;
+  flex-wrap: wrap;
+  align-items: center;
+  justify-content: space-between;
+  margin-bottom: 1.5rem;
+}
+
+.menu-title {
+  font-size: 2.5rem;
+  text-align: center;
+}
+
+.item-name {
+  margin: 0;
+  flex-grow: 1;
+}
+
+.item-price {
+  font-size: 1.5rem;
+}
+
+.title {
+  font-size: 1.5rem;
+  left: 50%;
+}
+
+.order-total {
+  position: relative;
+  margin: 0 auto;
+  max-width: 10rem;
+  max-height: 3rem;
+}
diff --git a/menu.json b/frontend/src/menu.json
similarity index 100%
rename from menu.json
rename to frontend/src/menu.json
diff --git a/frontend/src/modules/api-fetch.ts b/frontend/src/modules/api-fetch.ts
new file mode 100644
index 0000000..b7a484d
--- /dev/null
+++ b/frontend/src/modules/api-fetch.ts
@@ -0,0 +1,22 @@
+import fetch from "isomorphic-fetch";
+require("es6-promises");
+
+export function apiFetch(path: string, method?: string, data?: any) {
+  const options: any = {};
+  const headers = {
+    "Content-Type": "application/json",
+    Accepts: "application/json",
+  };
+  if (!method) method = "GET";
+  if (method.toUpperCase() !== "GET") {
+    options["body"] = JSON.stringify(data);
+  }
+
+  const url = `//${process.env.REACT_APP_HOST}/api/${path}`;
+
+  return fetch(url, {
+    method: method.toUpperCase(),
+    headers,
+    ...options,
+  }).then((response) => response.json());
+}
\ No newline at end of file
-- 
2.24.3 (Apple Git-128)

